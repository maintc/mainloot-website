---
import { Icon } from "astro-icon/components";
import { Image } from 'astro:assets';

import { serverCard } from "../data/ServerCard";
import ScrollButton from "./utils/ScrollButton.astro";
import AnimatedElement from "./utils/AnimatedElement.jsx";
import mainlootImage from "../img/mainloot.png";


interface Props {
  serverId: string;
  reverse?: boolean;
  nextServerId?: string;
  prevServerId?: string;
  animationDelay?: string;
}

const { serverId, nextServerId, prevServerId } = Astro.props;
---

<div class="container mx-auto flex items-center justify-center py-32">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <AnimatedElement client:visible animationType="scaleInTop" duration={1.2}>
    <Image
      src={mainlootImage}
      alt="mainloot"
      class="w-full object-cover"
      loading="lazy"
    /></AnimatedElement>
    <div
      class="grid max-w-2xl grid-cols-1 gap-4 mt-8 lg:max-w-none lg:grid-cols-4 mx-auto"
    >
      {
        serverCard.map((card) => (
        <AnimatedElement client:visible animationType="scaleInBottom" duration={1.2}>
          <article class="flex flex-col items-start justify-between fade-in">
            <div class="relative w-full">
              <Image 
                src={card.imageSrc}
                alt={`${card.title} server`} 
                format="webp" 
                loading="lazy"
                class="w-full rounded-2xl bg-gray-100 object-cover"
              />

              <div class="absolute inset-0 rounded-2xl ring-1 ring-inset ring-gray-900/10" />
            </div>
            <div class="mt-1">
              <div
                class="group relative"
                style={`--dynamic-hover-color: ${card.color};`}
              >
                <h3 class="mt-3 text-5xl font-semibold leading-6 text-white flex items-center">
                  <Icon
                    name={card.icon}
                    class="mr-2 text-white group-hover:text-[var(--dynamic-hover-color)]"
                  />
                  <a
                    href={card.title ? `#${card.title.toLowerCase()}` : '#'}
                    class="flex items-center group-hover:text-[var(--dynamic-hover-color)] scroll-link"
                    data-target-id={card.title ? card.title.toLowerCase() : ''}
                  >
                    {card.title}
                  </a>
                </h3>
                <p class="mt-5 line-clamp-3 text-sm font-semibold leading-6 text-gray-500">
                  {card.description}
                </p>
                <p class="mt-9 line-clamp-3 text-white inline-flex items-center">
                  <Icon name="mdi:calendar-sync" class="mr-2 text-3xl" style={`color: ${card.color};`} />
                  <span class="text-sm font-bold leading-6">{card.scheduledWipe}</span>
                </p>
                <p class="mt-3 line-clamp-3 text-gray-500 inline-flex items-center">
                  <Icon name="mdi:calendar-arrow-left" class="mr-2 text-3xl" />
                  <span class="text-sm font-bold leading-6"><span class="text-white">Last Wipe:</span> 02/02/2024</span>
                </p>
                <p class="mt-3 line-clamp-3 text-gray-500 inline-flex items-center">
                  <Icon name="mdi:calendar-star-outline" class="mr-2 text-3xl" style={`color: LightGreen;`} />
                  <span class="text-sm font-bold leading-6"><span class="text-white">Next Wipe:</span> 03/03/2024</span>
                </p>
                <p class="mt-3 line-clamp-3 text-white inline-flex items-center">
                  <Icon name="mdi:account-group" class="mr-2 text-3xl" style={`color: white;`} />
                  <span class="text-sm font-bold leading-6">Players: 17/100</span>
                </p>
              </div>
            </div>
          </article>
        </AnimatedElement>
        ))
      }
    </div>
    <div class="flex justify-center space-x-4">
      { (
        <ScrollButton
          targetId={prevServerId}
          buttonId={`${serverId}-up`}
          direction="up"
          animationDelay="0s"
          marginTop="mt-12"
        />
      )}
      {(
        <ScrollButton
          targetId={nextServerId}
          buttonId={`${serverId}-down`}
          direction="down"
          animationDelay="2s"
          marginTop="mt-12"
        />
      )}
    </div>
  </div>
</div>
