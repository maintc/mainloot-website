---
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import { serverCard } from "../data/ServerCard";
import ScrollButton from "./utils/ScrollButton.astro";
import AnimatedElement from "./utils/AnimatedElement.jsx";
import mainlootImage from "../img/mainloot.png";

interface Props {
  serverId: string;
  nextServerId?: string;
  prevServerId?: string;
}

const { serverId, nextServerId, prevServerId } = Astro.props;
---

<section class="server-card-section" id={serverId}>
  <div class="content-wrapper">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
      <AnimatedElement client:visible animationType="scaleInTop" duration={1.2}>
        <Image
          src={mainlootImage}
          alt="mainloot"
          class="w-full object-cover main-image"
          loading="lazy"
        />
      </AnimatedElement>
      <div class="server-card-grid">
        {serverCard.map((card) => (
          <AnimatedElement client:visible animationType="scaleInBottom" duration={1.2}>
            <article class="server-card">
              <div class="image-container">
                <Image
                  src={card.imageSrc}
                  alt={`${card.title} server`}
                  format="webp"
                  loading="lazy"
                  class="card-image"
                />
                <div class="image-overlay"></div>
              </div>
              <div class="card-content">
                <h3 class="card-title">
                  <Icon
                    name={card.icon}
                    class="card-icon"
                    style={`color: ${card.color};`}
                  />
                  <a
                    href={`#${card.title.toLowerCase()}`}
                    class="title-link"
                    data-target-id={card.title.toLowerCase()}
                  >
                    {card.title}
                  </a>
                </h3>
                <p class="card-description">{card.description}</p>
                <p class="card-info">
                  <Icon
                    name="mdi:calendar-sync"
                    class="info-icon"
                    style={`color: ${card.color};`}
                  />
                  <span>{card.scheduledWipe}</span>
                </p>
                <p class="card-info">
                  <Icon name="mdi:calendar-arrow-left" class="info-icon" />
                  <span><span class="text-white">Last Wipe:</span> 02/02/2024</span>
                </p>
                <p class="card-info">
                  <Icon
                    name="mdi:calendar-star-outline"
                    class="info-icon"
                    style="color: LightGreen;"
                  />
                  <span><span class="text-white">Next Wipe:</span> 03/03/2024</span>
                </p>
                <p class="card-info">
                  <Icon
                    name="mdi:account-group"
                    class="info-icon"
                    style="color: white;"
                  />
                  <span>Players: 17/100</span>
                </p>
              </div>
            </article>
          </AnimatedElement>
        ))}
      </div>
    </div>
    <div class="flex justify-center space-x-4 mt-8 hidden sm:flex">
      {prevServerId && (
        <ScrollButton
          targetId={prevServerId}
          buttonId={`${serverId}-up`}
          direction="up"
          animationDelay="0s"
          marginTop="mt-12"
        />
      )}
      {nextServerId && (
        <ScrollButton
          targetId={nextServerId}
          buttonId={`${serverId}-down`}
          direction="down"
          animationDelay="2s"
          marginTop="mt-12"
        />
      )}
    </div>
  </div>
</section>

<style>
  .server-card-section {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 2rem 0;
    background-color: #000;
  }

  .content-wrapper {
    width: 100%;
    max-width: 100%;
    margin: 0 auto;
  }

  .main-image {
    width: 100%;
    max-height: 50vh;
    object-fit: cover;
    margin-bottom: 2rem;
  }

  .server-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-top: 2rem;
  }

  .server-card {
    display: flex;
    flex-direction: column;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 0.5rem;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .server-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  }

  .image-container {
    position: relative;
    padding-top: 75%; /* 4:3 Aspect Ratio */
  }

  .card-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.2);
  }

  .card-content {
    padding: 1rem;
  }

  .card-title {
    display: flex;
    align-items: center;
    font-size: 1.25rem;
    font-weight: bold;
    color: white;
    margin-bottom: 0.5rem;
  }

  .card-icon {
    margin-right: 0.5rem;
    font-size: 1.5rem;
  }

  .title-link {
    color: inherit;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .title-link:hover {
    color: #64748b;
  }

  .card-description {
    font-size: 0.875rem;
    color: #9ca3af;
    margin-bottom: 1rem;
  }

  .card-info {
    display: flex;
    align-items: center;
    font-size: 0.875rem;
    color: white;
    margin-bottom: 0.5rem;
  }

  .info-icon {
    margin-right: 0.5rem;
    font-size: 1.25rem;
  }

  .navigation-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 2rem;
  }

  @media (max-width: 640px) {
    .server-card-section {
      padding: 1rem 0;
    }

    .server-card-grid {
      grid-template-columns: 1fr;
    }

    .main-image {
      max-height: 30vh;
    }
  }
</style>